-- Cluadia Pereira Cuba Ing Cico
CREATE DATABASE ANDAMIOS
CHARACTER SET utf8 COLLATE utf8_general_ci;

USE ANDAMIOS; 

CREATE TABLE CONSTRUCTOR (     
ITEM CHAR(6) NOT NULL PRIMARY KEY,                   
NOMBRE VARCHAR(35) DEFAULT ' ',      
EDAD INT(3) DEFAULT 0,         
DIRECCION VARCHAR(25) DEFAULT ' ',    
CELULAR INT(8) DEFAULT 0
) ENGINE = InnoDB; 

CREATE TABLE ANDAMIO (     
CODIGO CHAR(6) NOT NULL PRIMARY KEY,                   
DESCRIPCION VARCHAR(35) DEFAULT ' ',           
TAMAÑO FLOAT,    
TIPO CHAR(1)  
) ENGINE = InnoDB; 

CREATE TABLE DEPOSITO (     
CODIGO CHAR(6) NOT NULL PRIMARY KEY,                   
CENTRADA INT(4) DEFAULT 0,           
CSALIDA INT(4) DEFAULT 0,  
CSALDO INT(4) DEFAULT 0,  
FOREIGN KEY (CODIGO) REFERENCES ANDAMIO(CODIGO)      
) ENGINE = InnoDB; 

CREATE TABLE SOLICITUD (     
NSOL INT(4) NOT NULL PRIMARY KEY,  
FECHAS DATETIME DEFAULT NOW(),                
CANTIDADS INT(4),
CODIGO CHAR(6),
FOREIGN KEY (CODIGO) REFERENCES ANDAMIO(CODIGO)
) ENGINE = InnoDB; 

CREATE TABLE ALQUILER (     
CODIGO CHAR(6) NOT NULL,       
ITEM CHAR(6) NOT NULL,         
FECHA DATETIME DEFAULT NOW(),                
CANTIDAD INT(4) DEFAULT 0, 
PRECIO FLOAT,
DESCUENTO FLOAT,
MONTOAPAGAR FLOAT,
NSOL INT(4),
PRIMARY KEY(CODIGO,ITEM),
FOREIGN KEY (CODIGO) REFERENCES ANDAMIO(CODIGO),
FOREIGN KEY (ITEM) REFERENCES CONSTRUCTOR(ITEM),
FOREIGN KEY (NSOL) REFERENCES SOLICITUD(NSOL)
) ENGINE = InnoDB;

CREATE TABLE RECEPCION (     
NRECEP INT(4) NOT NULL PRIMARY KEY,              
CANTIDADR INT(4),
CODIGO CHAR(6),
FOREIGN KEY (CODIGO) REFERENCES ANDAMIO(CODIGO)
) ENGINE = InnoDB; 


INSERT INTO CONSTRUCTOR VALUES ('111111','MAURICIO VENTURA', 28, 'AV. H. SILES # 16', 70221566), 
('222222','FERNANDO RUIZ', 32, 'C. ARENALES # 23', 70304567); 
INSERT INTO ANDAMIO VALUES ('A-0001', 'ANDAMIO1', 10, 'A'), ('A-0002', 'ANDAMIO2', 15, 'B');
INSERT INTO DEPOSITO VALUES ('A-0001', 100, 60, 40), ('A-0002', 200, 120, 80); 
INSERT INTO SOLICITUD VALUES (1, NOW(), 10,  'A-0001'), (2, NOW(), 20,  'A-0002');
INSERT INTO ALQUILER VALUES ('A-0001',  '111111', NOW(), 10, 200, 300, 1700, 1), 
('A-0002', '222222', NOW(), 20, 100, 400, 1700, 2);
INSERT INTO RECEPCION VALUES (1, 10, 'A-0001'), (2, 20, 'A-0002');

/* 1 */
DELIMITER $$
CREATE PROCEDURE TRANSACCION1(
    IN COD CHAR(6), 
    IN DES VARCHAR(35), 
    IN TAM FLOAT, 
    IN TIP CHAR(1), 
    IN ITEM CHAR(6)
)
BEGIN
DECLARE NRECEP INT;
DECLARE CSALDO INT DEFAULT 0;
SET AUTOCOMMIT = 0;
START TRANSACTION;
    IF NOT EXISTS(SELECT * FROM ANDAMIO WHERE CODIGO = COD) THEN
        IF EXISTS(SELECT * FROM CONSTRUCTOR WHERE ITEM = ITEM) THEN
            BEGIN
			INSERT INTO ANDAMIO (CODIGO, DESCRIPCION, TAMAÑO, TIPO) 
			VALUES (COD, DES, TAM, TIP);
			INSERT INTO DEPOSITO (CODIGO, CENTRADA, CSALIDA, CSALDO) 
			VALUES (COD, 0, 0, CSALDO);
			SELECT (MAX(NRECEP)) + 1 INTO NRECEP FROM RECEPCION;
			INSERT INTO RECEPCION (NRECEP, CANTIDADR, CODIGO) 
			VALUES (NRECEP, CSALDO, COD);
			IF (MYSQL_ERRNO <> 0) THEN
				BEGIN
				ROLLBACK;
				SIGNAL SQLSTATE '45000'
				SET MESSAGE_TEXT= 'TRANSACCIÓN NO COMPLETADA', MYSQL_ERRNO = '1006';END;
                END IF;
            END;
            ELSE
            SELECT 'EL CONSTRUCTOR NO ESTÁ REGISTRADO' AS MENSAJE;
        END IF;
        ELSE
        SELECT 'EL ANDAMIO YA ESTÁ REGISTRADO' AS MENSAJE;
    END IF;
    COMMIT;
END $$
DELIMITER ;
CALL TRANSACCION1('A-0003', 'ANDAMIO3', 20, 'C', '111111');

/* 2 */

CREATE VIEW Ejercicio2 AS SELECT
C.NOMBRE AS 'NOMBRE CONSTRUCTOR',  
COUNT(S.NSOL) AS 'CANTIDAD TOTAL de ANDAMIOS SOLICITADOS',  
COUNT(DISTINCT A.CODIGO) AS 'TOTAL ANDAMIOS ALQUILADOS', 
(COUNT(DISTINCT A.CODIGO) / COUNT(S.NSOL)) * 100 AS '% PORCENTAJE ANDAMIOS ALQUILADOS'  
FROM CONSTRUCTOR C INNER JOIN SOLICITUD S ON C.ITEM = S.CODIGO  
INNER JOIN ALQUILER A ON C.ITEM = A.ITEM 
WHERE A.PRECIO >= 0 AND A.PRECIO < 1000
GROUP BY C.NOMBRE  
HAVING MIN(A.MONTOAPAGAR) >= 1000;

SELECT * FROM Ejercicio2;

SELECT * FROM ALQUILER;
SELECT * FROM ANDAMIO;
SELECT * FROM CONSTRUCTOR;

/*3 comprobacion */

/* a) el atributo celular es de tipo cadena char(8)  */
ALTER TABLE CONSTRUCTOR 
ADD CONSTRAINT EJERCICIO3 CHECK (
    CELULAR LIKE '7[1-4][0-9][0-9][0-9][0-9][0-9][0-9]' 
    OR CELULAR LIKE '6[7-8][0-9][0-9][0-9][0-9][0-9][0-9]' );
/* b) el atributo celular es de tipo entero int(8), validar utilizando between */
ALTER TABLE CONSTRUCTOR
ADD CONSTRAINT EJERCICIO3 CHECK (
    CELULAR BETWEEN 71000000 AND 74999999 
    OR CELULAR BETWEEN 67000000 AND 68999999 );

/* 4 */

DELIMITER $$
CREATE TRIGGER ejercicio4b AFTER INSERT ON ALQUILER
FOR EACH ROW
BEGIN
DECLARE descuento FLOAT;
SET descuento = (NEW.PRECIO * NEW.CANTIDAD) * 0.10; 
UPDATE ALQUILER
SET DESCUENTO = descuento,
MONTOAPAGAR = NEW.PRECIO * NEW.CANTIDAD - descuento
WHERE CODIGO = NEW.CODIGO AND ITEM = NEW.ITEM AND FECHA = NEW.FECHA;
END $$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE ACTIVE1 (IN codigo CHAR(6), IN item CHAR(6), IN cantidad INT, IN precio FLOAT, IN nsol INT )
BEGIN
INSERT INTO ALQUILER (CODIGO, ITEM, CANTIDAD, PRECIO, NSOL)
VALUES (codigo, item, cantidad, precio, nsol);
END $$
DELIMITER ;
CALL ACTIVE1('A-0003', '111111', 15, 150.00, 3);
SELECT * FROM ALQUILER;

DROP TRIGGER IF EXISTS Ejercicio4;


