-- CLAUDIA PEREIRA CUBA ING.CIENCIAS DE LA COMPUTACIÓN
CREATE DATABASE VENTAS
CHARACTER SET utf8 COLLATE utf8_general_ci;

USE VENTAS; 

CREATE TABLE HERRAMIENTA ( 
COD CHAR(6) NOT NULL PRIMARY KEY, 
DESCRIPCION VARCHAR(35) DEFAULT ' ', 
PRECIO FLOAT(4,1) DEFAULT 0.0 
) ENGINE = InnoDB; 

CREATE TABLE ALMACEN( 
COD CHAR(6) NOT NULL PRIMARY KEY, 
CINGRESO INT(4) DEFAULT 0, 
CEGRESO INT(4) DEFAULT 0,
CSALDO INT(4) DEFAULT 0, 
FOREIGN KEY (COD) REFERENCES HERRAMIENTA(COD) 
) ENGINE = InnoDB; 

CREATE TABLE COMERCIAL ( 
NIT CHAR(11) NOT NULL PRIMARY KEY, 
NOMBRE VARCHAR(35) DEFAULT ' ', 
DIRECCION VARCHAR(30) DEFAULT ' ' 
) ENGINE = InnoDB; 

CREATE TABLE CLIENTE ( 
CI CHAR(11) NOT NULL PRIMARY KEY, 
NOMBRE VARCHAR(35) DEFAULT ' ', 
EDAD INT(3) DEFAULT 0, 
SEXO CHAR(1), CHECK(SEXO IN('F', 'M')), 
TELEFONO INT(5) DEFAULT 0 
) ENGINE = InnoDB; 

CREATE TABLE SOLICITUD ( 
NSOL INT(4) NOT NULL PRIMARY KEY, 
FECHA DATETIME DEFAULT NOW(), 
CANTIDAD INT(4) DEFAULT 0, 
CI CHAR(11), 
COD CHAR(6), 
STAT CHAR(1) DEFAULT ' ', 
FOREIGN KEY (CI) REFERENCES CLIENTE(CI),
FOREIGN KEY (COD) REFERENCES HERRAMIENTA(COD) 
) ENGINE = InnoDB; 

CREATE TABLE VENTA ( 
COD CHAR(6) NOT NULL, 
CI CHAR(11) NOT NULL, 
NSOL INT(4) NOT NULL, 
CANTIDAD INT(4) DEFAULT 0,
COSTO FLOAT(6,2) DEFAULT 0.0, 
PRIMARY KEY(COD, CI, NSOL),
FOREIGN KEY (COD) REFERENCES HERRAMIENTA(COD),
FOREIGN KEY (CI) REFERENCES CLIENTE(CI),
FOREIGN KEY (NSOL) REFERENCES SOLICITUD(NSOL)
) ENGINE = InnoDB; 

CREATE TABLE COMPRA ( 
COD CHAR(6) NOT NULL, 
NIT CHAR(11) NOT NULL, 
CANTIDADC INT(4) DEFAULT 0,
COSTOC FLOAT(6,2) DEFAULT 0.0, 
PRIMARY KEY(COD, NIT),
FOREIGN KEY (COD) REFERENCES HERRAMIENTA(COD),
FOREIGN KEY (NIT) REFERENCES COMERCIAL(NIT)
) ENGINE = InnoDB; 

INSERT INTO HERRAMIENTA VALUES ('H-0001', 'ALICATE', 25);
INSERT INTO CLIENTE VALUES('1096745', 'CARLOS RUIZ', 24, 'M', 34567);
INSERT INTO COMERCIAL VALUES ('100000010', 'LIMPOR LTDA.', 'AV DEL MAESTRO # 650');
INSERT INTO ALMACEN VALUES ('H-0001', 100, 40, 60);
INSERT INTO SOLICITUD VALUES (2, NOW(), 5, '1096745', 'H-0001', ' ');

/*8. TRANSACCION QUE REGISTRE UN SOLICITUD, REGISTRE LA VENTA RESPECTIVA Y ACTUALICE EL ALMACEN.
LOS DATOS SON: EL NOMBRE DEL CLIENTE, CODIGO DE LA HERRAMIENTA, LA CANTIDAD SOLICITADA Y EL 
NUMERO DE LA SOLICITUD*/
DELIMITER $$
CREATE PROCEDURE TRANSAC_8(IN NOMCLI VARCHAR(35), IN CODHERR CHAR(6), IN CANTSOL INT, IN NUMSOL INT)
BEGIN
DECLARE CID CHAR(11);DECLARE PRE FLOAT;DECLARE CSALDO_ACTUAL INT;
SET AUTOCOMMIT = 0;
START TRANSACTION;
IF EXISTS(SELECT * FROM CLIENTE WHERE NOMBRE = NOMCLI) THEN
	IF EXISTS(SELECT * FROM HERRAMIENTA WHERE COD = CODHERR) THEN
	IF NOT EXISTS(SELECT * FROM SOLICITUD WHERE NSOL = NUMSOL) THEN
	IF NOT EXISTS(SELECT * FROM VENTA WHERE NSOL = NUMSOL) THEN
	BEGIN
	SELECT CI INTO CID FROM CLIENTE WHERE NOMBRE = NOMCLI;
	SELECT PRECIO INTO PRE FROM HERRAMIENTA WHERE COD = CODHERR;
	SELECT CSALDO INTO CSALDO_ACTUAL FROM ALMACEN WHERE COD = CODHERR;
	INSERT INTO SOLICITUD VALUES (NUMSOL, NOW(), CANTSOL, CID, CODHERR, ' ');
	INSERT INTO VENTA VALUES (CODHERR, CID, NUMSOL, CANTSOL, CANTSOL * PRE);
	UPDATE ALMACEN SET CEGRESO = CEGRESO + CANTSOL, CSALDO = CSALDO - CANTSOL WHERE COD = CODHERR;
	IF (MYSQL_ERRNO <> 0) THEN
	BEGIN
	ROLLBACK;
	SIGNAL SQLSTATE '45000'
	SET MESSAGE_TEXT= 'TRANSACCIÓN NO COMPLETADA', MYSQL_ERRNO = '1006';END;
	END IF;
	END;
	ELSE 
	SELECT 'LA VENTA YA EXISTE' AS MENSAJE; 
	END IF;
	ELSE 
	SELECT 'SOLICITUD YA EXISTE' AS MENSAJE; 
	END IF;
	ELSE 
	SELECT 'LA HERRAMIENTA NO SE ENCUENTRA REGISTRADA' AS MENSAJE; 
	END IF;
    ELSE 
	SELECT 'EL CLIENTE NO ESTA REGISTRADO EN LA BASE DE DATOS' AS MENSAJE; 
    END IF;
    COMMIT;
END;
END $$
DELIMITER ;
CALL TRANSAC_8('CARLOS RUIZ', 'H-0001', 2, 1);
SELECT * FROM SOLICITUD;
SELECT * FROM VENTA;
SELECT * FROM ALMACEN;
/*9. TRANSACCION QUE REGISTRE LA SOLICITUD REALIZADA POR UN CLIENTE DE UNA HERRAMIENTA POR UNA 
CANTIDAD DETERMINADA SI LA CANTIDAD NECESARIA ESTA DISPONIBLE EN EL ALMACEN (EL SALDO CUBRE 
LA CANTIDAD SOLICITADA), CASO CONTRARIO SOLAMENTE SE REGISTRE LA SOLICITUD CON LA CANTIDAD 
EXISTENTE EN EN ALMACEN. LOS DATOS SON: EL NOMBRE DEL CLIENTE, LA DESCRIPCION DE LA 
HERRAMIENTA Y LA CANTIDAD SOLICITADA*/
DELIMITER $$
CREATE PROCEDURE TRANSAC_9(IN NOMCLI VARCHAR(35), IN DESHERRAM VARCHAR(35), IN CANTSOL INT, IN NUMSOL INT)
BEGIN
DECLARE IDCLIENTE CHAR(11); DECLARE CODHERR CHAR(6); DECLARE PRECIO FLOAT; DECLARE SALDO_ACTUAL INT; DECLARE CANTIDAD_REGISTRAR INT;
    SET AUTOCOMMIT = 0;
    START TRANSACTION;
    IF EXISTS(SELECT * FROM CLIENTE WHERE NOMBRE = NOMCLI) THEN
        IF EXISTS(SELECT * FROM HERRAMIENTA WHERE DESCRIPCION = DESHERRAM) THEN
            IF NOT EXISTS(SELECT * FROM SOLICITUD WHERE NSOL = NUMSOL) THEN
                IF NOT EXISTS(SELECT * FROM VENTA WHERE NSOL = NUMSOL) THEN
                    BEGIN
					SELECT CI INTO IDCLIENTE FROM CLIENTE WHERE NOMBRE = NOMCLI;
					SELECT COD, PRECIO INTO CODHERR, PRECIO FROM HERRAMIENTA WHERE DESCRIPCION = DESHERRAM;
					SELECT CSALDO INTO SALDO_ACTUAL FROM ALMACEN WHERE COD = CODHERR;
					SET CANTIDAD_REGISTRAR = CANTSOL;
					INSERT INTO SOLICITUD VALUES (NUMSOL, NOW(), CANTIDAD_REGISTRAR, IDCLIENTE, CODHERR, ' ');
					INSERT INTO VENTA VALUES (CODHERR, IDCLIENTE, NUMSOL, CANTIDAD_REGISTRAR, CANTIDAD_REGISTRAR * PRECIO);
					UPDATE ALMACEN SET CEGRESO = CEGRESO + CANTIDAD_REGISTRAR, CSALDO = CSALDO - CANTIDAD_REGISTRAR WHERE COD = CODHERR;
					IF (MYSQL_ERRNO <> 0) THEN
					BEGIN
					ROLLBACK;
					SIGNAL SQLSTATE '45000'
					SET MESSAGE_TEXT= 'TRANSACCIÓN NO COMPLETADA', MYSQL_ERRNO = '1006'; END;
					END IF;
					END;
                    ELSE 
                    SELECT 'VENTA YA EXISTE' AS MENSAJE; 
                    END IF;
                ELSE 
                SELECT 'SOLICITUD YA EXISTE' AS MENSAJE; 
            END IF;
          ELSE 
            SELECT 'LA HERRAMIENTA NO SE ENCUENTRA REGISTRADA' AS MENSAJE; 
         END IF;
        ELSE 
        SELECT 'EL CLIENTE NO ESTA REGISTRADO EN LA BASE DE DATOS' AS MENSAJE; 
    END IF;
    COMMIT;
END;
$$
DELIMITER ;
CALL TRANSAC_9('CARLOS RUIZ', 'ALICATE', 2, 1);
SELECT * FROM SOLICITUD;
SELECT * FROM VENTA;
SELECT * FROM ALMACEN;

/*10. TRANSACCION QUE ELIMINE EL REGISTRO DE LA COMPRA DE HERRAMIENTAS DE UN DETERMINADO 
COMERCIAL REGISTRADO EN LA BASE DE DATOS. ASI MISMO ACTUALICE EL ALMACEN DE MANERA QUE SE 
CONTABILICE LA CANTIDAD COMPRADA. LOS DATOS SON: EL CODIGO DE LA HERRAMIENTA Y NOMBRE DEL 
COMERCIAL EN EL QUE SE REALIZO LA COMPRA*/

DELIMITER $$
CREATE PROCEDURE TRANSAC_10(IN CODHERR CHAR(6), IN NOMCOM VARCHAR(35))
BEGIN
    DECLARE NITCOM CHAR(11);DECLARE CANTIDAD_COMPRADA INT;
    SET AUTOCOMMIT = 0;
    START TRANSACTION;
    IF EXISTS(SELECT * FROM COMERCIAL WHERE NOMBRE = NOMCOM) THEN
        IF EXISTS(SELECT * FROM COMPRA WHERE COD = CODHERR AND NIT = (SELECT NIT FROM COMERCIAL WHERE NOMBRE = NOMCOM)) THEN
            BEGIN
                SELECT NIT INTO NITCOM FROM COMERCIAL WHERE NOMBRE = NOMCOM;
                SELECT CANTIDADC INTO CANTIDAD_COMPRADA FROM COMPRA WHERE COD = CODHERR AND NIT = NITCOM;
                DELETE FROM COMPRA WHERE COD = CODHERR AND NIT = NITCOM;
                UPDATE ALMACEN SET CINGRESO = CINGRESO - CANTIDAD_COMPRADA, CSALDO = CSALDO - CANTIDAD_COMPRADA WHERE COD = CODHERR;
                IF (MYSQL_ERRNO <> 0) THEN
                    BEGIN
                        ROLLBACK;
                        SIGNAL SQLSTATE '45000'
                        SET MESSAGE_TEXT= 'TRANSACCIÓN NO COMPLETADA', MYSQL_ERRNO = '1006';
                    END;
                END IF;
            END;
            ELSE 
            SELECT 'COMPRA NO EXISTE' AS MENSAJE; 
        END IF;
        ELSE 
        SELECT 'COMERCIAL NO ESTÁ REGISTRADO EN LA BASE DE DATOS' AS MENSAJE; 
    END IF;
    COMMIT;
END;
$$
DELIMITER ;
CALL TRANSAC_10('H-0001', 'LIMPOR LTDA.');
SELECT * FROM COMPRA;
SELECT * FROM ALMACEN;

/*11. TRANSACCION QUE ACTUALICE LA DISMINUCION EN LA CANTIDAD DE UNA VENTA CORRESPONDIENTE A UNA 
SOLICITUD. SE DEBERA ACTUALIZAR TAMBIEN LA CANTIDAD DE LA SOLICITUD CORRESPONDIENTE Y SU 
ACTUALIZACION EN EL ALMACEN. LOS DATOS SON: EL NUMERO DE LA SOLICITUD Y CANTIDAD EN LA QUE SE 
DISMINUYE LA VENTA.*/

DELIMITER $$
CREATE PROCEDURE TRANSAC_11(IN NUMSOL INT, IN CANTDISMIN INT)
BEGIN
DECLARE CID CHAR(11); DECLARE CODI CHAR(6); DECLARE CANTIDAD_VENTA_ACTUAL INT;DECLARE CANTIDAD_SOLICITUD_ACTUAL INT;
SET AUTOCOMMIT = 0;
START TRANSACTION;
IF EXISTS(SELECT * FROM SOLICITUD WHERE NSOL = NUMSOL) THEN
BEGIN
            SELECT CI, COD, CANTIDAD INTO CID, CODI, CANTIDAD_SOLICITUD_ACTUAL FROM SOLICITUD WHERE NSOL = NUMSOL;
            SELECT CANTIDAD INTO CANTIDAD_VENTA_ACTUAL FROM VENTA WHERE NSOL = NUMSOL AND CI = CID AND COD = CODI;
            UPDATE VENTA
            SET CANTIDAD = CANTIDAD_VENTA_ACTUAL - CANTDISMIN, 
                COSTO = (CANTIDAD_VENTA_ACTUAL - CANTDISMIN) * (COSTO / CANTIDAD_VENTA_ACTUAL)
            WHERE NSOL = NUMSOL AND CI = CID AND COD = CODI;
            UPDATE SOLICITUD SET CANTIDAD = CANTIDAD_SOLICITUD_ACTUAL - CANTDISMIN
            WHERE NSOL = NUMSOL;
            UPDATE ALMACEN SET CEGRESO = CEGRESO - CANTDISMIN, CSALDO = CSALDO + CANTDISMIN 
            WHERE COD = CODI;
            IF (MYSQL_ERRNO <> 0) THEN
                BEGIN
                    ROLLBACK;
                    SIGNAL SQLSTATE '45000'
                    SET MESSAGE_TEXT= 'TRANSACCIÓN NO COMPLETADA', MYSQL_ERRNO = '1006'; END;
		END IF;
        END;
    ELSE 
   SELECT 'SOLICITUD NO EXISTE' AS MENSAJE;
    END IF;
    COMMIT;
END;
$$
DELIMITER ;
CALL TRANSAC_11(1, 2);
SELECT * FROM VENTA;
SELECT * FROM SOLICITUD;
SELECT * FROM ALMACEN;

